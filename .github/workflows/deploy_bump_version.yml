name: bump version
on: 
  # workflow_call:
  # whenever a PR is closed against main
  workflow_dispatch:
    inputs:
      bump_type:
        type: choice
        options: ['minor', 'major', 'patch']
        description: 'Bump version'
        required: true
        default: 'patch'
  workflow_call:
    inputs:
      bump_type:
        type: string
        description: 'Bump version - minor, major or patch'
        required: true
  # pull_request:
  #   branches:
  #     - main
  #   types:
  #     - closed  

jobs:
  bump_package_version:
    environment: 
      name: 'bump-version'
      
    runs-on: ubuntu-latest
    permissions:                # Job-level permissions configuration starts here
      contents: write           # 'write' access to repository contents
      actions: 'read'
    steps:
      - name: set bump type
        id: set_bump_type
        # if workflow_dispatch, use the 'inputs' context, otherwise set the bump type to 'patch'
        run: |
          if [ -n "${{ github.event.inputs.bump_type }}" ]; then
            echo "BUMP_TYPE=${{ github.event.inputs.bump_type }}" >> "$GITHUB_ENV"
          else
            echo "BUMP_TYPE=patch" >> "$GITHUB_ENV"
          fi
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v2
        # Create GitHub App Token to let us push changes to main
        id: app-token
        with:
          app-id: ${{ vars.PUSH_APP_ID }}
          private-key: ${{ secrets.PUSH_APP_SECRET }}

      - name: check out code
        uses: actions/checkout@v4 # v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Install uv
        uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Bump version and build
        run: |
          uv run bump-my-version bump ${{ env.BUMP_TYPE }}
          version=$(uv run python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: commit updated version number
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add pyproject.toml
          git commit -m "Bump version to ${{ env.VERSION }}"

      - name: Push changes to main
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          branch: ${{ github.ref }}
          
          
    outputs:
      package-version: ${{ env.VERSION }}

