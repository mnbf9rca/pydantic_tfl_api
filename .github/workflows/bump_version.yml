name: bump version, build artifact, and save to main
on: 
  # whenever a PR is closed against main
  pull_request:
    branches:
      - main
    types:
      - closed


env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  bump:
    environment: 
      name: 'bump-version'
    runs-on: ubuntu-latest
    permissions:                # Job-level permissions configuration starts here
      contents: write           # 'write' access to repository contents
      actions: 'read'
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1
        # Create GitHub App Token to let us push changes to main
        id: app-token
        with:
          app-id: ${{ vars.PUSH_APP_ID }}
          private-key: ${{ secrets.PUSH_APP_SECRET }}

      - name: check out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Set up Python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5
        with:
          python-version: 3.12

      - name: install poetry
        uses: snok/install-poetry@93ada01c735cc8a383ce0ce2ae205a21c415379b # v1
        with:
          version: 1.8.3 # pin the version as they keep changing their APIs
          virtualenvs-create: false
          virtualenvs-in-project: false

      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          poetry install --with dev --no-interaction --sync
          python  -c "import os; print(os.environ['VIRTUAL_ENV'])"

      - name: Bump version and build
        run: |
          poetry version minor
          version=$(poetry version | awk '{print $2}')
          echo "VERSION=$version" >> $GITHUB_ENV
          poetry build

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist-${{ env.VERSION }}
          path: dist/

      - name: commit updated version number
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add pyproject.toml
          git commit -m "Bump version to ${{ env.VERSION }}"

      - name: Push changes to main
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          branch: main
