name: Publish the completed package to Pypi

on:
  push:
    branches:
      - main

# permissions:                    # Global permissions configuration starts here
#   contents: read                # 'read' access to repository contents
#   pull-requests: read          # 'write' access to pull requests

jobs:
  codeql:
    permissions:
      actions: read
      contents: read
      security-events: write
    uses: ./.github/workflows/codeql.yml

  test:
    uses: ./.github/workflows/test-workflow.yml
  
  dependency-review:    
    uses: ./.github/workflows/dependency-review.yml

  publish:
    needs: [test, dependency-review, codeql]
    runs-on: ubuntu-latest
    environment: 
      name: 'published'
    permissions:                # Job-level permissions configuration starts here
      contents: write           # 'write' access to repository contents
      pull-requests: write      # 'write' access to pull requests    
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 2
      - name: Set up Python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5
        with:
          python-version: 3.12
      - uses: snok/install-poetry@93ada01c735cc8a383ce0ce2ae205a21c415379b # v1
        with:
          version: 1.8.3 # pin the version as they keep changing their APIs
          virtualenvs-create: false
          virtualenvs-in-project: false
      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          poetry install --with dev --no-interaction --sync
          python  -c "import os; print(os.environ['VIRTUAL_ENV'])"
      - name: Bump version
        run: |
          poetry version minor
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add pyproject.toml
          git commit -m "bump version from workflow"
          git push origin HEAD:${{ github.head_ref }}
      - name: Build
        run: poetry build
      - name: Use Pypi test
        run: |
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry config pypi-token.test-pypi  ${{ secrets.PYPI_TOKEN }}
      - name: Publish
        run: poetry publish -r test-pypi

    